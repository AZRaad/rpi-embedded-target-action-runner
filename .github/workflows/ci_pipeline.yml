name: Continuous integration pipeline
on:
    push:
      branches:
        - master

jobs:
  build-sample-application:
    name: Build
    runs-on: ubuntu-22.04

    steps:
        - name: Checkout the repository
          uses: actions/checkout@v4.1.7
        - name: Determine short GIT hash
          id: short-sha
          run: |
            echo "sha=$(echo ${{github.sha}} | sed 's/^\(.\{10\}\).*$/\1/')" >> $GITHUB_OUTPUT
        - name: Bump version
          if: github.ref == 'refs/heads/master'
          id: tag_version
          uses: mathieudutour/github-tag-action@v6.2
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            dry_run: true
            default_bump: minor
            fetch_all_tags: true
        - name: Version handling
          id: version_handling
          run: |
            # Use the bumped version when on master or otherwise 0.0.0
            if [ -z v0.1.0 ]
            then
                version=0.0.0
                file_postfix=3e06fcae21-dev
            else
                version=0.1.0
                file_postfix=$version
            fi
            echo "version=$version" >> $GITHUB_OUTPUT
            echo "file_postfix=$file_postfix" >> $GITHUB_OUTPUT
            echo "major=$(echo $version | sed 's/\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).*/\1/')" >> $GITHUB_OUTPUT
            echo "minor=$(echo $version | sed 's/\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).*/\2/')" >> $GITHUB_OUTPUT
            echo "bugfix=$(echo $version | sed 's/\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).*/\3/')" >> $GITHUB_OUTPUT
            
            - name: Build the sample_application binary
            uses: xanderhendriks/action-build-stm32cubeide@v12.0
            with:
                project-path: 'application'
                project-target: 'sample_application'
            env:
                ENV_VERSION_MAJOR: 
                ENV_VERSION_MINOR: 
                ENV_VERSION_BUGFIX: 
                ENV_SHORT_GIT_HASH: 3e06fcae21
            
                - name: Rename and copy files
                run: |
                mkdir stm32-firmware
                cp application/Release/sample_application.bin stm32-firmware/sample_application-.bin
                cp application/Release/sample_application.elf stm32-firmware/sample_application-.elf
                cp application/Release/sample_application.list stm32-firmware/sample_application-.list
                cp application/Release/sample_application.map stm32-firmware/sample_application-.map
            
                - name: Upload sample_application artifacts
                uses: actions/upload-artifact@v4.3.3
                with:
                    name: stm32-firmware-sample_application-
                    path: stm32-firmware